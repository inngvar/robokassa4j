package org.robo.data;

import java.util.Map;

/**
 * �?нтерфейс данных для отправки на сервер робокассы.
 * 
 * @author igor.ch
 * 
 *         sMerchantLogin - login магазина в обменном пункте(обязательный
 *         параметр)
 * 
 *         nOutSum - требуемая к получению сумма. Сумма должна быть указана в
 *         той валюте, которая была указана при регистрации магазина. Если
 *         параметр не указан (пустая строка), то пользователю предоставляется
 *         возможность ввести сумму самостоятельно. Формат представления числа -
 *         разделитель точка.
 * 
 *         nInvId - номер счета в магазине (должен быть уникальным для
 *         магазина). Может принимать значения от 1 до 2147483647 (2^31-1). Если
 *         содержит пустое значение, вовсе не указан, либо равен "0", то при
 *         создании операции ей будет автоматически присвоен уникальный номер
 *         счета. Рекомендуется использовать данную возможность только в очень
 *         простых магазинах, где не требуется какого-либо контроля.
 * 
 *         sInvDesc - описание покупки, можно использовать только символы
 *         английского или русского алфавита, цифры и знаки препинания.
 *         Максимальная длина 100 символов.
 * 
 *         sSignatureValue - контрольная сумма MD5(обязательный параметр) -
 *         строка представляющая собой 32-разрядное число в 16-ричной форме и
 *         любом регистре (всего 32 символа 0-9, A-F). Формируется по строке,
 *         содержащей некоторые параметры, разделенные ':', с добавлением
 *         sMerchantPass1 - (устанавливается через интерфейс администрирования)
 *         т.е. sMerchantLogin:nOutSum:nInvId:sMerchantPass1[:пользовательские
 *         параметры, в отсортированном порядке] К примеру если переданы
 *         параметры shpb=xxx и shpa=yyy то подпись формируется из строки
 *         ...:sMerchantPass1:shpa=yyy:shpb=xxx
 * 
 *         sIncCurrLabel - предлагаемая валюта платежа. Пользователь может
 *         изменить ее в процессе оплаты.
 * 
 *         sCulture - опционально, язык общения с клиентом. Значения: en, ru.
 *         Если не установлен - берется язык региональных установок браузера.
 * 
 */
public interface RequestData extends SuccessInfo {

	/**
	 * 
	 * @return login магазина в обменном пункте(обязательный параметр)
	 */
	public String getMrchLogin();	

	/**
	 * 
	 * @return описание покупки
	 */
	public String getInvDesc();	

	/**
	 * предлагаемая валюта платежа.
	 */
	public String getIncCurrLabel();
	
	/**
	 * Additional user parameters
	 * @return Map with additional user parameters
	 */
	public Map<String,String> getUserParameters();

	
}
